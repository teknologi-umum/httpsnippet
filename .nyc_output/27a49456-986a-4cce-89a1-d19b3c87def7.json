{"/home/elianiva/Dev/teknologi-umum/httpsnippet/src/targets/node/request.js":{"path":"/home/elianiva/Dev/teknologi-umum/httpsnippet/src/targets/node/request.js","statementMap":{"0":{"start":{"line":11,"column":13},"end":{"line":11,"column":28}},"1":{"start":{"line":12,"column":24},"end":{"line":12,"column":51}},"2":{"start":{"line":13,"column":20},"end":{"line":13,"column":65}},"3":{"start":{"line":14,"column":0},"end":{"line":93,"column":2}},"4":{"start":{"line":15,"column":17},"end":{"line":17,"column":15}},"5":{"start":{"line":18,"column":20},"end":{"line":18,"column":25}},"6":{"start":{"line":19,"column":17},"end":{"line":19,"column":45}},"7":{"start":{"line":20,"column":4},"end":{"line":21,"column":17}},"8":{"start":{"line":22,"column":20},"end":{"line":25,"column":5}},"9":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"10":{"start":{"line":27,"column":8},"end":{"line":27,"column":37}},"11":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"12":{"start":{"line":30,"column":8},"end":{"line":30,"column":44}},"13":{"start":{"line":32,"column":4},"end":{"line":70,"column":5}},"14":{"start":{"line":34,"column":12},"end":{"line":34,"column":53}},"15":{"start":{"line":35,"column":12},"end":{"line":35,"column":18}},"16":{"start":{"line":37,"column":12},"end":{"line":40,"column":13}},"17":{"start":{"line":38,"column":16},"end":{"line":38,"column":55}},"18":{"start":{"line":39,"column":16},"end":{"line":39,"column":36}},"19":{"start":{"line":41,"column":12},"end":{"line":41,"column":18}},"20":{"start":{"line":43,"column":12},"end":{"line":43,"column":34}},"21":{"start":{"line":44,"column":12},"end":{"line":64,"column":15}},"22":{"start":{"line":45,"column":35},"end":{"line":45,"column":37}},"23":{"start":{"line":46,"column":16},"end":{"line":49,"column":17}},"24":{"start":{"line":47,"column":20},"end":{"line":47,"column":63}},"25":{"start":{"line":48,"column":20},"end":{"line":48,"column":27}},"26":{"start":{"line":50,"column":16},"end":{"line":56,"column":17}},"27":{"start":{"line":51,"column":20},"end":{"line":51,"column":37}},"28":{"start":{"line":52,"column":20},"end":{"line":52,"column":87}},"29":{"start":{"line":54,"column":21},"end":{"line":56,"column":17}},"30":{"start":{"line":55,"column":20},"end":{"line":55,"column":51}},"31":{"start":{"line":57,"column":16},"end":{"line":62,"column":17}},"32":{"start":{"line":58,"column":20},"end":{"line":61,"column":22}},"33":{"start":{"line":63,"column":16},"end":{"line":63,"column":58}},"34":{"start":{"line":65,"column":12},"end":{"line":65,"column":18}},"35":{"start":{"line":67,"column":12},"end":{"line":69,"column":13}},"36":{"start":{"line":68,"column":16},"end":{"line":68,"column":52}},"37":{"start":{"line":72,"column":4},"end":{"line":80,"column":5}},"38":{"start":{"line":73,"column":8},"end":{"line":73,"column":28}},"39":{"start":{"line":74,"column":8},"end":{"line":74,"column":48}},"40":{"start":{"line":75,"column":20},"end":{"line":75,"column":30}},"41":{"start":{"line":76,"column":8},"end":{"line":78,"column":11}},"42":{"start":{"line":77,"column":12},"end":{"line":77,"column":143}},"43":{"start":{"line":79,"column":8},"end":{"line":79,"column":21}},"44":{"start":{"line":81,"column":4},"end":{"line":83,"column":5}},"45":{"start":{"line":82,"column":8},"end":{"line":82,"column":50}},"46":{"start":{"line":84,"column":4},"end":{"line":85,"column":17}},"47":{"start":{"line":86,"column":4},"end":{"line":91,"column":17}},"48":{"start":{"line":92,"column":4},"end":{"line":92,"column":121}},"49":{"start":{"line":94,"column":0},"end":{"line":99,"column":2}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":17},"end":{"line":14,"column":18}},"loc":{"start":{"line":14,"column":44},"end":{"line":93,"column":1}},"line":14},"1":{"name":"(anonymous_1)","decl":{"start":{"line":44,"column":43},"end":{"line":44,"column":44}},"loc":{"start":{"line":44,"column":60},"end":{"line":64,"column":13}},"line":44},"2":{"name":"(anonymous_2)","decl":{"start":{"line":76,"column":31},"end":{"line":76,"column":32}},"loc":{"start":{"line":76,"column":49},"end":{"line":78,"column":9}},"line":76}},"branchMap":{"0":{"loc":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},{"start":{"line":26,"column":4},"end":{"line":28,"column":5}}],"line":26},"1":{"loc":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},{"start":{"line":29,"column":4},"end":{"line":31,"column":5}}],"line":29},"2":{"loc":{"start":{"line":32,"column":4},"end":{"line":70,"column":5}},"type":"switch","locations":[{"start":{"line":33,"column":8},"end":{"line":35,"column":18}},{"start":{"line":36,"column":8},"end":{"line":41,"column":18}},{"start":{"line":42,"column":8},"end":{"line":65,"column":18}},{"start":{"line":66,"column":8},"end":{"line":69,"column":13}}],"line":32},"3":{"loc":{"start":{"line":37,"column":12},"end":{"line":40,"column":13}},"type":"if","locations":[{"start":{"line":37,"column":12},"end":{"line":40,"column":13}},{"start":{"line":37,"column":12},"end":{"line":40,"column":13}}],"line":37},"4":{"loc":{"start":{"line":46,"column":16},"end":{"line":49,"column":17}},"type":"if","locations":[{"start":{"line":46,"column":16},"end":{"line":49,"column":17}},{"start":{"line":46,"column":16},"end":{"line":49,"column":17}}],"line":46},"5":{"loc":{"start":{"line":46,"column":20},"end":{"line":46,"column":76}},"type":"binary-expr","locations":[{"start":{"line":46,"column":20},"end":{"line":46,"column":35}},{"start":{"line":46,"column":39},"end":{"line":46,"column":54}},{"start":{"line":46,"column":58},"end":{"line":46,"column":76}}],"line":46},"6":{"loc":{"start":{"line":50,"column":16},"end":{"line":56,"column":17}},"type":"if","locations":[{"start":{"line":50,"column":16},"end":{"line":56,"column":17}},{"start":{"line":50,"column":16},"end":{"line":56,"column":17}}],"line":50},"7":{"loc":{"start":{"line":54,"column":21},"end":{"line":56,"column":17}},"type":"if","locations":[{"start":{"line":54,"column":21},"end":{"line":56,"column":17}},{"start":{"line":54,"column":21},"end":{"line":56,"column":17}}],"line":54},"8":{"loc":{"start":{"line":57,"column":16},"end":{"line":62,"column":17}},"type":"if","locations":[{"start":{"line":57,"column":16},"end":{"line":62,"column":17}},{"start":{"line":57,"column":16},"end":{"line":62,"column":17}}],"line":57},"9":{"loc":{"start":{"line":60,"column":37},"end":{"line":60,"column":81}},"type":"cond-expr","locations":[{"start":{"line":60,"column":57},"end":{"line":60,"column":74}},{"start":{"line":60,"column":77},"end":{"line":60,"column":81}}],"line":60},"10":{"loc":{"start":{"line":67,"column":12},"end":{"line":69,"column":13}},"type":"if","locations":[{"start":{"line":67,"column":12},"end":{"line":69,"column":13}},{"start":{"line":67,"column":12},"end":{"line":69,"column":13}}],"line":67},"11":{"loc":{"start":{"line":72,"column":4},"end":{"line":80,"column":5}},"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":80,"column":5}},{"start":{"line":72,"column":4},"end":{"line":80,"column":5}}],"line":72},"12":{"loc":{"start":{"line":81,"column":4},"end":{"line":83,"column":5}},"type":"if","locations":[{"start":{"line":81,"column":4},"end":{"line":83,"column":5}},{"start":{"line":81,"column":4},"end":{"line":83,"column":5}}],"line":81}},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1},"f":{"0":0,"1":0,"2":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"inputSourceMap":{"version":3,"file":"/home/elianiva/Dev/teknologi-umum/httpsnippet/src/targets/node/request.js","sources":["/home/elianiva/Dev/teknologi-umum/httpsnippet/src/targets/node/request.js"],"names":[],"mappings":"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","sourcesContent":["/**\n * @description\n * HTTP code snippet generator for Node.js using Request.\n *\n * @author\n * @AhmadNassri\n *\n * for any questions or issues regarding the generated code snippet, please open an issue mentioning the author.\n */\n\n'use strict'\n\nconst util = require('util')\nconst stringifyObject = require('stringify-object')\nconst CodeBuilder = require('../../helpers/code-builder').default\n\nmodule.exports = function (source, options) {\n  const opts = Object.assign({\n    indent: '  '\n  }, options)\n\n  let includeFS = false\n  const code = new CodeBuilder(opts.indent)\n\n  code.push(\"const request = require('request');\")\n    .blank()\n\n  const reqOpts = {\n    method: source.method,\n    url: source.url\n  }\n\n  if (Object.keys(source.queryObj).length) {\n    reqOpts.qs = source.queryObj\n  }\n\n  if (Object.keys(source.headersObj).length) {\n    reqOpts.headers = source.headersObj\n  }\n\n  switch (source.postData.mimeType) {\n    case 'application/x-www-form-urlencoded':\n      reqOpts.form = source.postData.paramsObj\n      break\n\n    case 'application/json':\n      if (source.postData.jsonObj) {\n        reqOpts.body = source.postData.jsonObj\n        reqOpts.json = true\n      }\n      break\n\n    case 'multipart/form-data':\n      reqOpts.formData = {}\n\n      source.postData.params.forEach(function (param) {\n        const attachment = {}\n\n        if (!param.fileName && !param.fileName && !param.contentType) {\n          reqOpts.formData[param.name] = param.value\n          return\n        }\n\n        if (param.fileName) {\n          includeFS = true\n\n          attachment.value = 'fs.createReadStream(\"' + param.fileName + '\")'\n        } else if (param.value) {\n          attachment.value = param.value\n        }\n\n        if (param.fileName) {\n          attachment.options = {\n            filename: param.fileName,\n            contentType: param.contentType ? param.contentType : null\n          }\n        }\n\n        reqOpts.formData[param.name] = attachment\n      })\n      break\n\n    default:\n      if (source.postData.text) {\n        reqOpts.body = source.postData.text\n      }\n  }\n\n  // construct cookies argument\n  if (source.cookies.length) {\n    reqOpts.jar = 'JAR'\n\n    code.push('const jar = request.jar();')\n\n    const url = source.url\n\n    source.cookies.forEach(function (cookie) {\n      code.push(\"jar.setCookie(request.cookie('%s=%s'), '%s');\", encodeURIComponent(cookie.name), encodeURIComponent(cookie.value), url)\n    })\n    code.blank()\n  }\n\n  if (includeFS) {\n    code.unshift(\"const fs = require('fs');\")\n  }\n\n  code.push('const options = %s;', stringifyObject(reqOpts, { indent: '  ', inlineCharacterLimit: 80 }))\n    .blank()\n\n  code.push(util.format('request(options, %s', 'function (error, response, body) {'))\n\n    .push(1, 'if (error) throw new Error(error);')\n    .blank()\n    .push(1, 'console.log(body);')\n    .push('});')\n    .blank()\n\n  return code.join().replace('\"JAR\"', 'jar').replace(/'fs\\.createReadStream\\(\"(.+)\"\\)'/g, \"fs.createReadStream('$1')\")\n}\n\nmodule.exports.info = {\n  key: 'request',\n  title: 'Request',\n  link: 'https://github.com/request/request',\n  description: 'Simplified HTTP request client'\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"baa30b6ecf8038d51f42189044910a589afd05b1","contentHash":"184be3d98530759a027b52171161e27166c8b197a123db77d72947035db231f6"},"/home/elianiva/Dev/teknologi-umum/httpsnippet/src/helpers/code-builder.ts":{"path":"/home/elianiva/Dev/teknologi-umum/httpsnippet/src/helpers/code-builder.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":15},"end":{"line":3,"column":30}},"2":{"start":{"line":15,"column":8},"end":{"line":15,"column":41}},"3":{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},"4":{"start":{"line":17,"column":12},"end":{"line":17,"column":74}},"5":{"start":{"line":19,"column":8},"end":{"line":19,"column":24}},"6":{"start":{"line":20,"column":8},"end":{"line":20,"column":38}},"7":{"start":{"line":42,"column":30},"end":{"line":42,"column":32}},"8":{"start":{"line":43,"column":20},"end":{"line":43,"column":21}},"9":{"start":{"line":44,"column":8},"end":{"line":51,"column":9}},"10":{"start":{"line":45,"column":12},"end":{"line":45,"column":22}},"11":{"start":{"line":46,"column":12},"end":{"line":46,"column":36}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":33}},"13":{"start":{"line":49,"column":13},"end":{"line":51,"column":9}},"14":{"start":{"line":50,"column":12},"end":{"line":50,"column":24}},"15":{"start":{"line":52,"column":8},"end":{"line":55,"column":9}},"16":{"start":{"line":53,"column":12},"end":{"line":53,"column":49}},"17":{"start":{"line":54,"column":12},"end":{"line":54,"column":31}},"18":{"start":{"line":56,"column":23},"end":{"line":56,"column":75}},"19":{"start":{"line":57,"column":8},"end":{"line":57,"column":47}},"20":{"start":{"line":58,"column":8},"end":{"line":58,"column":49}},"21":{"start":{"line":67,"column":8},"end":{"line":67,"column":67}},"22":{"start":{"line":68,"column":8},"end":{"line":68,"column":20}},"23":{"start":{"line":77,"column":8},"end":{"line":77,"column":64}},"24":{"start":{"line":78,"column":8},"end":{"line":78,"column":20}},"25":{"start":{"line":84,"column":8},"end":{"line":84,"column":30}},"26":{"start":{"line":85,"column":8},"end":{"line":85,"column":20}},"27":{"start":{"line":91,"column":8},"end":{"line":91,"column":47}},"28":{"start":{"line":94,"column":0},"end":{"line":94,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":36},"end":{"line":21,"column":5}},"line":14},"1":{"name":"(anonymous_1)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":47},"end":{"line":59,"column":5}},"line":41},"2":{"name":"(anonymous_2)","decl":{"start":{"line":66,"column":4},"end":{"line":66,"column":5}},"loc":{"start":{"line":66,"column":40},"end":{"line":69,"column":5}},"line":66},"3":{"name":"(anonymous_3)","decl":{"start":{"line":76,"column":4},"end":{"line":76,"column":5}},"loc":{"start":{"line":76,"column":37},"end":{"line":79,"column":5}},"line":76},"4":{"name":"(anonymous_4)","decl":{"start":{"line":83,"column":4},"end":{"line":83,"column":5}},"loc":{"start":{"line":83,"column":12},"end":{"line":86,"column":5}},"line":83},"5":{"name":"(anonymous_5)","decl":{"start":{"line":90,"column":4},"end":{"line":90,"column":5}},"loc":{"start":{"line":90,"column":11},"end":{"line":92,"column":5}},"line":90}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},"type":"if","locations":[{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},{"start":{"line":16,"column":8},"end":{"line":18,"column":9}}],"line":16},"1":{"loc":{"start":{"line":16,"column":12},"end":{"line":16,"column":63}},"type":"binary-expr","locations":[{"start":{"line":16,"column":12},"end":{"line":16,"column":33}},{"start":{"line":16,"column":37},"end":{"line":16,"column":63}}],"line":16},"2":{"loc":{"start":{"line":20,"column":25},"end":{"line":20,"column":37}},"type":"binary-expr","locations":[{"start":{"line":20,"column":25},"end":{"line":20,"column":29}},{"start":{"line":20,"column":33},"end":{"line":20,"column":37}}],"line":20},"3":{"loc":{"start":{"line":44,"column":8},"end":{"line":51,"column":9}},"type":"if","locations":[{"start":{"line":44,"column":8},"end":{"line":51,"column":9}},{"start":{"line":44,"column":8},"end":{"line":51,"column":9}}],"line":44},"4":{"loc":{"start":{"line":49,"column":13},"end":{"line":51,"column":9}},"type":"if","locations":[{"start":{"line":49,"column":13},"end":{"line":51,"column":9}},{"start":{"line":49,"column":13},"end":{"line":51,"column":9}}],"line":49},"5":{"loc":{"start":{"line":66,"column":12},"end":{"line":66,"column":32}},"type":"default-arg","locations":[{"start":{"line":66,"column":31},"end":{"line":66,"column":32}}],"line":66},"6":{"loc":{"start":{"line":76,"column":9},"end":{"line":76,"column":29}},"type":"default-arg","locations":[{"start":{"line":76,"column":28},"end":{"line":76,"column":29}}],"line":76}},"s":{"0":1,"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0],"6":[0]},"inputSourceMap":{"version":3,"file":"/home/elianiva/Dev/teknologi-umum/httpsnippet/src/helpers/code-builder.ts","sources":["/home/elianiva/Dev/teknologi-umum/httpsnippet/src/helpers/code-builder.ts"],"names":[],"mappings":";;AAAA,+BAAwC;AAExC;;;;;;;;GAQG;AACH,MAAqB,WAAW;IAI9B,YAAoB,YAAoB,EAAE,IAAY;QAAlC,iBAAY,GAAZ,YAAY,CAAQ;QACtC,IAAI,YAAY,KAAK,IAAI,IAAI,YAAY,KAAK,SAAS,EAAE;YACvD,MAAM,IAAI,SAAS,CAAC,wCAAwC,CAAC,CAAA;SAC9D;QAED,IAAI,CAAC,KAAK,GAAG,EAAE,CAAA;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,IAAI,CAAA;IAC/B,CAAC;IAED;;;;;;;;;;;;;;;;;;OAkBG;IACH,SAAS,CAAC,gBAAiC,EAAE,IAAY,EAAE,GAAG,IAAW;QACvE,IAAI,eAAe,GAAG,EAAE,CAAA;QACxB,IAAI,KAAK,GAAG,CAAC,CAAA;QACb,IAAI,OAAO,gBAAgB,IAAI,QAAQ,EAAE;YACvC,KAAK,GAAG,CAAC,CAAA;YACT,IAAI,GAAG,gBAAgB,CAAA;YACvB,gBAAgB,GAAG,CAAC,CAAA;SACrB;aAAM,IAAI,gBAAgB,KAAK,IAAI,EAAE;YACpC,OAAO,IAAI,CAAA;SACZ;QAED,OAAO,gBAAgB,EAAE;YACvB,eAAe,IAAI,IAAI,CAAC,YAAY,CAAA;YACpC,gBAAgB,EAAE,CAAA;SACnB;QAED,MAAM,MAAM,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;QACnE,MAAM,CAAC,OAAO,CAAC,eAAe,GAAG,IAAI,CAAC,CAAA;QAEtC,OAAO,aAAO,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAA;IACpC,CAAC;IAED;;;;;OAKG;IACH,OAAO,CAAC,mBAA2B,CAAC,EAAE,IAAY;QAChD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC,CAAA;QAE1D,OAAO,IAAI,CAAA;IACb,CAAC;IAED;;;;;OAKG;IACH,IAAI,CAAC,mBAA2B,CAAC,EAAE,IAAY;QAC7C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC,CAAA;QAEvD,OAAO,IAAI,CAAA;IACb,CAAC;IAED;;OAEG;IACH,KAAK;QACH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAErB,OAAO,IAAI,CAAA;IACb,CAAC;IAED;;OAEG;IACH,IAAI;QACF,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;IACxC,CAAC;CACF;AA7FD,8BA6FC","sourcesContent":["import { format as _format } from 'util'\n\n/**\n * Helper object to format and aggragate lines of code.\n * Lines are aggregated in a `code` array, and need to be joined to obtain a proper code snippet.\n *\n * @class\n *\n * @param {string} indentation Desired indentation character for aggregated lines of code\n * @param {string} join Desired character to join each line of code\n */\nexport default class CodeBuilder {\n  private _code: (string | null)[];\n  private _lineJoin: string;\n\n  constructor(private _indentation: string, join: string) {\n    if (_indentation === null || _indentation === undefined) {\n      throw new TypeError(\"indentation can't be null or undefined\")\n    }\n\n    this._code = []\n    this._lineJoin = join || '\\n'\n  }\n\n  /**\n   * Add given indentation level to given string and format the string (variadic)\n   * @param [indentationLevel=0] - Desired level of indentation for this line\n   * @param line - Line of code. Can contain formatting placeholders\n   * @param {...anyobject} - Parameter to bind to `line`'s formatting placeholders\n   * @return {string}\n   *\n   * @example\n   *   var builder = CodeBuilder('\\t')\n   *\n   *   builder.buildLine('console.log(\"hello world\")')\n   *   // returns: 'console.log(\"hello world\")'\n   *\n   *   builder.buildLine(2, 'console.log(\"hello world\")')\n   *   // returns: 'console.log(\"\\t\\thello world\")'\n   *\n   *   builder.buildLine(2, 'console.log(\"%s %s\")', 'hello', 'world')\n   *   // returns: 'console.log(\"\\t\\thello world\")'\n   */\n  buildLine(indentationLevel: string | number, line: string, ...args: any[]) {\n    let lineIndentation = ''\n    let slice = 2\n    if (typeof indentationLevel == 'string') {\n      slice = 1\n      line = indentationLevel\n      indentationLevel = 0\n    } else if (indentationLevel === null) {\n      return null\n    }\n\n    while (indentationLevel) {\n      lineIndentation += this._indentation\n      indentationLevel--\n    }\n\n    const format = Array.prototype.slice.call(args, slice, args.length)\n    format.unshift(lineIndentation + line)\n\n    return _format.apply(this, format)\n  }\n\n  /**\n   * Invoke buildLine() and add the line at the top of current lines\n   * @param {number} [indentationLevel=0] Desired level of indentation for this line\n   * @param {string} line Line of code\n   * @return {this}\n   */\n  unshift(indentationLevel: number = 0, line: string) {\n    this._code.unshift(this.buildLine(indentationLevel, line))\n\n    return this\n  }\n\n  /**\n   * Invoke buildLine() and add the line at the bottom of current lines\n   * @param {number} [indentationLevel=0] Desired level of indentation for this line\n   * @param {string} line Line of code\n   * @return {this}\n   */\n  push(indentationLevel: number = 0, line: string) {\n    this._code.push(this.buildLine(indentationLevel, line))\n\n    return this\n  }\n\n  /**\n   * Add an empty line at the end of current lines\n   */\n  blank(): CodeBuilder {\n    this._code.push(null)\n\n    return this\n  }\n\n  /**\n   * Concatenate all current lines using the given lineJoin\n   */\n  join(): string {\n    return this._code.join(this._lineJoin)\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3a2bca0eb57e32494f46dc45ff1048e9622e390f","contentHash":"74ca164be2c67609943385b87c56b3cbdfa414d2de8c568501a4f7b772119452"}}